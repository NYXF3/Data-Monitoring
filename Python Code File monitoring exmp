import time
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# Function to read the current balance from the file
def get_current_balance():
    try:
        with open('C:/Users/YOURUSER/Desktop/balance.txt', 'r') as file:  # Update the path as needed
            balance = float(file.read().strip())
        return balance
    except Exception as e:
        print(f"Error reading balance: {e}")
        return None

# Function to send email notification
def send_email(subject, body):
    sender_email = "your_email@gmail.com"  # Your Gmail address
    receiver_email = "youssef@example.com"  # Receiver's email address
    password = "your_generated_app_password"  # Your Gmail app password
    
    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = receiver_email
    msg['Subject'] = subject
    
    msg.attach(MIMEText(body, 'plain'))
    
    try:
        with smtplib.SMTP('smtp.gmail.com', 587) as server:
            server.starttls()
            server.login(sender_email, password)
            text = msg.as_string()
            server.sendmail(sender_email, receiver_email, text)
        print(f"Email sent to {receiver_email} with subject: {subject}")
    except Exception as e:
        print(f"Error sending email: {e}")

# Monitor balance and send notifications
def monitor_balance():
    current_balance = get_current_balance()
    if current_balance is not None:
        if current_balance == 400:
            send_email("Balance Warning", "Warning! Your balance is $400... 100$ LEFT.")
        elif current_balance == 300:
            send_email("Balance Alert", "You have arrived to $300.")

# Automate the monitoring process (example using a simple loop)
while True:
    monitor_balance()
    time.sleep(60)  # Check every minute
